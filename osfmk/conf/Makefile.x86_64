######################################################################
#BEGIN	Machine dependent Makefile fragment for x86_64
######################################################################

<<<<<<< HEAD
CWARNFLAGS = $(CWARNFLAGS_STD) -Wshorten-64-to-32
=======
CFLAGS+= -DAT386=1
SFLAGS+= -DAT386=1

CFLAGS+= $(WERROR) -Wshorten-64-to-32
CWARNFLAGS= $(filter-out -Wbad-function-cast, $(CWARNFLAGS_STD))

# Objects that don't compile cleanly:
OBJS_NO_WERROR=				\
	UNDRequest.o			\
	db_examine.o			\
	db_macro.o			\
	db_print.o			\
	db_sym.o			\
	db_variables.o			\
	db_disasm.o			\
	db_interface.o			\
	db_trace.o			\
	host_priv_server.o \
	mach_host_server.o \
	security_server.o \
	device_server.o \
	gssd_mach.o \

OBJS_WERROR=$(filter-out $(OBJS_NO_WERROR),$(OBJS))

$(OBJS_WERROR):		WERROR=-Werror
>>>>>>> origin/10.6

# Files that must go in the __HIB segment:
UNCONFIGURED_HIB_FILES=					\
           WKdmDecompress_new.o         \
           WKdmData_new.o               \
           hibernate_restore.o          \
           hibernate_bootstrap.o	\
           bcopy.o			\
           bzero.o

HIB_FILES=$(filter $(UNCONFIGURED_HIB_FILES),$(OBJS))

# Unconfigured __HIB files must be Mach-O for "setsegname"
WKdmDecompress_new.o_CFLAGS_ADD += -fno-stack-protector $(CFLAGS_NOLTO_FLAG)
WKdmData_new.o_CFLAGS_ADD += -fno-stack-protector $(CFLAGS_NOLTO_FLAG)
hibernate_restore.o_CFLAGS_ADD += -fno-stack-protector $(CFLAGS_NOLTO_FLAG)
hibernate_bootstrap.o_CFLAGS_ADD += -fno-stack-protector $(CFLAGS_NOLTO_FLAG)
bcopy.o_CFLAGS_ADD += -fno-stack-protector $(CFLAGS_NOLTO_FLAG)
bzero.o_CFLAGS_ADD += -fno-stack-protector $(CFLAGS_NOLTO_FLAG)

# To appear at the beginning of the __HIB segment, emit
# as Mach-O so that the linker can enforce symbol order
boot_pt.o_CFLAGS_ADD += $(CFLAGS_NOLTO_FLAG)

######################################################################
#END	Machine dependent Makefile fragment for x86_64
######################################################################
